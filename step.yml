#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Release notes generator
summary: |
  Step for creating release notes
description: |
  This step will create release notes from commit messages with format ${COMMIT_TAG}-XXXXXX: xyz.
  Commit messages are parsed from between two last git TAGs. If no TAGS are present, it shows default message.
  Example of output: ID-12345678: Task description
website: https://github.com/Q-Agency/bitrise-step-release-notes
source_code_url: https://github.com/Q-Agency/bitrise-step-release-notes
support_url: https://github.com/Q-Agency/bitrise-step-release-notes/issues
host_os_tags:
  - osx-10.10
  - ubuntu-16.04

type_tags:
  - utility

is_requires_admin_user: true
is_always_run: false
is_skippable: true
run_if: ""

deps:
  brew:
    - name: git
    - name: wget
  apt_get:
    - name: git
    - name: wget

toolkit:
  bash:
    entry_file: step.sh

inputs:
  - COMMIT_TAG: ID
    opts:
      title: Commit tag
      summary: Only commits that start with $COMMIT_TAG are used in changelog.
      description: |-
        Takes all the commit messages between the last two tags and greps only the commits that start with $COMMIT_TAG
      is_required: false

  - ENVIRNOMENT_TAG: staging
    opts:
      title: Environment tag
      summary: Set to true to update, if Flutter from a matching channel is preinstalled.
      description: |-
        Choose the desired tag name:
        * Setting to `development` will take the last 2 'development' tags.
        * Setting to `staging` will take the last 2 'staging' tags.
        * Setting to `production` will take the last 2 'production' tags.
      value_options:
        - "development"
        - "staging"
        - "production"

outputs:
  - CHANGELOG:
    opts:
      title: "Changelog"
      summary: Commit messages parsed from between two last git TAGs.
      description: |-
        Commit massages parsed from between two last git TAGs. If no TAGS are present, it shows default message.
        ID-1234567: Task description
